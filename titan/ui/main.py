# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '../titan/ui/main.ui'
#
# Created by: PyQt5 UI code generator 5.7.1
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1250, 660)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(640, 480))
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 6)
        self.verticalLayout.setObjectName("verticalLayout")
        self.splitter_horizontal = QtWidgets.QSplitter(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.splitter_horizontal.sizePolicy().hasHeightForWidth())
        self.splitter_horizontal.setSizePolicy(sizePolicy)
        self.splitter_horizontal.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_horizontal.setHandleWidth(5)
        self.splitter_horizontal.setChildrenCollapsible(True)
        self.splitter_horizontal.setObjectName("splitter_horizontal")
        self.splitter_vertical_left = QtWidgets.QSplitter(self.splitter_horizontal)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.splitter_vertical_left.sizePolicy().hasHeightForWidth())
        self.splitter_vertical_left.setSizePolicy(sizePolicy)
        self.splitter_vertical_left.setOrientation(QtCore.Qt.Vertical)
        self.splitter_vertical_left.setHandleWidth(5)
        self.splitter_vertical_left.setChildrenCollapsible(False)
        self.splitter_vertical_left.setObjectName("splitter_vertical_left")
        self.tabWidget_setups = QtWidgets.QTabWidget(self.splitter_vertical_left)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget_setups.sizePolicy().hasHeightForWidth())
        self.tabWidget_setups.setSizePolicy(sizePolicy)
        self.tabWidget_setups.setTabPosition(QtWidgets.QTabWidget.South)
        self.tabWidget_setups.setObjectName("tabWidget_setups")
        self.tab_setups = QtWidgets.QWidget()
        self.tab_setups.setObjectName("tab_setups")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.tab_setups)
        self.verticalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.treeView_setups = QtWidgets.QTreeView(self.tab_setups)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.treeView_setups.sizePolicy().hasHeightForWidth())
        self.treeView_setups.setSizePolicy(sizePolicy)
        self.treeView_setups.setMinimumSize(QtCore.QSize(0, 0))
        self.treeView_setups.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.treeView_setups.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.treeView_setups.setEditTriggers(QtWidgets.QAbstractItemView.DoubleClicked)
        self.treeView_setups.setDragEnabled(True)
        self.treeView_setups.setDragDropMode(QtWidgets.QAbstractItemView.InternalMove)
        self.treeView_setups.setDefaultDropAction(QtCore.Qt.MoveAction)
        self.treeView_setups.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.treeView_setups.setTextElideMode(QtCore.Qt.ElideRight)
        self.treeView_setups.setIndentation(20)
        self.treeView_setups.setUniformRowHeights(True)
        self.treeView_setups.setExpandsOnDoubleClick(False)
        self.treeView_setups.setObjectName("treeView_setups")
        self.treeView_setups.header().setMinimumSectionSize(50)
        self.treeView_setups.header().setStretchLastSection(True)
        self.verticalLayout_7.addWidget(self.treeView_setups)
        self.tabWidget_setups.addTab(self.tab_setups, "")
        self.tabWidget = QtWidgets.QTabWidget(self.splitter_vertical_left)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        self.tabWidget.setTabPosition(QtWidgets.QTabWidget.South)
        self.tabWidget.setObjectName("tabWidget")
        self.tab_tools = QtWidgets.QWidget()
        self.tab_tools.setObjectName("tab_tools")
        self.verticalLayout_12 = QtWidgets.QVBoxLayout(self.tab_tools)
        self.verticalLayout_12.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.listView_tools = QtWidgets.QListView(self.tab_tools)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.listView_tools.sizePolicy().hasHeightForWidth())
        self.listView_tools.setSizePolicy(sizePolicy)
        self.listView_tools.setMinimumSize(QtCore.QSize(0, 0))
        self.listView_tools.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.listView_tools.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.listView_tools.setObjectName("listView_tools")
        self.verticalLayout_12.addWidget(self.listView_tools)
        self.tabWidget.addTab(self.tab_tools, "")
        self.splitter_vertical_right = QtWidgets.QSplitter(self.splitter_horizontal)
        self.splitter_vertical_right.setOrientation(QtCore.Qt.Vertical)
        self.splitter_vertical_right.setHandleWidth(5)
        self.splitter_vertical_right.setChildrenCollapsible(False)
        self.splitter_vertical_right.setObjectName("splitter_vertical_right")
        self.tabWidget_cmd_output = QtWidgets.QTabWidget(self.splitter_vertical_right)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget_cmd_output.sizePolicy().hasHeightForWidth())
        self.tabWidget_cmd_output.setSizePolicy(sizePolicy)
        self.tabWidget_cmd_output.setMinimumSize(QtCore.QSize(0, 0))
        self.tabWidget_cmd_output.setTabPosition(QtWidgets.QTabWidget.South)
        self.tabWidget_cmd_output.setObjectName("tabWidget_cmd_output")
        self.tab_cmd = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tab_cmd.sizePolicy().hasHeightForWidth())
        self.tab_cmd.setSizePolicy(sizePolicy)
        self.tab_cmd.setObjectName("tab_cmd")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout(self.tab_cmd)
        self.verticalLayout_11.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.verticalLayout_11.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_11.setSpacing(6)
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.textBrowser_main = CustomQTextBrowser(self.tab_cmd)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowser_main.sizePolicy().hasHeightForWidth())
        self.textBrowser_main.setSizePolicy(sizePolicy)
        self.textBrowser_main.setMinimumSize(QtCore.QSize(0, 0))
        self.textBrowser_main.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.textBrowser_main.setTabStopWidth(40)
        self.textBrowser_main.setOpenLinks(False)
        self.textBrowser_main.setObjectName("textBrowser_main")
        self.verticalLayout_11.addWidget(self.textBrowser_main)
        self.tabWidget_cmd_output.addTab(self.tab_cmd, "")
        self.tabWidget_tools = QtWidgets.QTabWidget(self.splitter_vertical_right)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabWidget_tools.sizePolicy().hasHeightForWidth())
        self.tabWidget_tools.setSizePolicy(sizePolicy)
        self.tabWidget_tools.setTabPosition(QtWidgets.QTabWidget.South)
        self.tabWidget_tools.setObjectName("tabWidget_tools")
        self.tab_tool_output = QtWidgets.QWidget()
        self.tab_tool_output.setObjectName("tab_tool_output")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.tab_tool_output)
        self.verticalLayout_9.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.textBrowser_process_output = CustomQTextBrowser(self.tab_tool_output)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowser_process_output.sizePolicy().hasHeightForWidth())
        self.textBrowser_process_output.setSizePolicy(sizePolicy)
        self.textBrowser_process_output.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setFamily("Segoe UI")
        self.textBrowser_process_output.setFont(font)
        self.textBrowser_process_output.setObjectName("textBrowser_process_output")
        self.verticalLayout_9.addWidget(self.textBrowser_process_output)
        self.tabWidget_tools.addTab(self.tab_tool_output, "")
        self.tab_tool_definitions = QtWidgets.QWidget()
        self.tab_tool_definitions.setObjectName("tab_tool_definitions")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.tab_tool_definitions)
        self.verticalLayout_10.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_10.setSpacing(0)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.label_tool_name = QtWidgets.QLabel(self.tab_tool_definitions)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_tool_name.sizePolicy().hasHeightForWidth())
        self.label_tool_name.setSizePolicy(sizePolicy)
        self.label_tool_name.setMinimumSize(QtCore.QSize(0, 0))
        self.label_tool_name.setMaximumSize(QtCore.QSize(16777215, 17))
        self.label_tool_name.setStyleSheet("background-color: rgb(0, 0, 0);\n"
"color: rgb(255, 255, 255);")
        self.label_tool_name.setFrameShape(QtWidgets.QFrame.Box)
        self.label_tool_name.setFrameShadow(QtWidgets.QFrame.Plain)
        self.label_tool_name.setLineWidth(1)
        self.label_tool_name.setText("")
        self.label_tool_name.setAlignment(QtCore.Qt.AlignCenter)
        self.label_tool_name.setObjectName("label_tool_name")
        self.verticalLayout_10.addWidget(self.label_tool_name)
        self.textBrowser_tool_def = QtWidgets.QTextBrowser(self.tab_tool_definitions)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textBrowser_tool_def.sizePolicy().hasHeightForWidth())
        self.textBrowser_tool_def.setSizePolicy(sizePolicy)
        self.textBrowser_tool_def.setMinimumSize(QtCore.QSize(0, 0))
        self.textBrowser_tool_def.setStyleSheet("background-color: rgb(0, 0, 0);\n"
"color: rgb(255, 255, 255);")
        self.textBrowser_tool_def.setObjectName("textBrowser_tool_def")
        self.verticalLayout_10.addWidget(self.textBrowser_tool_def)
        self.tabWidget_tools.addTab(self.tab_tool_definitions, "")
        self.verticalLayout.addWidget(self.splitter_horizontal)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1250, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setMinimumSize(QtCore.QSize(200, 0))
        self.menuFile.setObjectName("menuFile")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuData = QtWidgets.QMenu(self.menubar)
        self.menuData.setObjectName("menuData")
        self.menuTools = QtWidgets.QMenu(self.menubar)
        self.menuTools.setObjectName("menuTools")
        self.menuExecute = QtWidgets.QMenu(self.menubar)
        self.menuExecute.setObjectName("menuExecute")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setObjectName("menuView")
        self.menuToolbars = QtWidgets.QMenu(self.menuView)
        self.menuToolbars.setObjectName("menuToolbars")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionQuit = QtWidgets.QAction(MainWindow)
        self.actionQuit.setShortcutContext(QtCore.Qt.WindowShortcut)
        self.actionQuit.setObjectName("actionQuit")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionNew = QtWidgets.QAction(MainWindow)
        font = QtGui.QFont()
        self.actionNew.setFont(font)
        self.actionNew.setShortcutContext(QtCore.Qt.WindowShortcut)
        self.actionNew.setObjectName("actionNew")
        self.actionLoad = QtWidgets.QAction(MainWindow)
        self.actionLoad.setShortcutContext(QtCore.Qt.WindowShortcut)
        self.actionLoad.setObjectName("actionLoad")
        self.actionHelp = QtWidgets.QAction(MainWindow)
        self.actionHelp.setShortcutContext(QtCore.Qt.WindowShortcut)
        self.actionHelp.setObjectName("actionHelp")
        self.actionSave = QtWidgets.QAction(MainWindow)
        self.actionSave.setShortcutContext(QtCore.Qt.WindowShortcut)
        self.actionSave.setObjectName("actionSave")
        self.actionSave_As = QtWidgets.QAction(MainWindow)
        self.actionSave_As.setShortcutContext(QtCore.Qt.WindowShortcut)
        self.actionSave_As.setObjectName("actionSave_As")
        self.actionUnpack = QtWidgets.QAction(MainWindow)
        self.actionUnpack.setShortcutContext(QtCore.Qt.WindowShortcut)
        self.actionUnpack.setObjectName("actionUnpack")
        self.actionPack = QtWidgets.QAction(MainWindow)
        self.actionPack.setShortcutContext(QtCore.Qt.WindowShortcut)
        self.actionPack.setObjectName("actionPack")
        self.actionSettings = QtWidgets.QAction(MainWindow)
        self.actionSettings.setObjectName("actionSettings")
        self.actionImportData = QtWidgets.QAction(MainWindow)
        self.actionImportData.setObjectName("actionImportData")
        self.actionVerifyData = QtWidgets.QAction(MainWindow)
        self.actionVerifyData.setObjectName("actionVerifyData")
        self.actionAdd_Tool = QtWidgets.QAction(MainWindow)
        self.actionAdd_Tool.setObjectName("actionAdd_Tool")
        self.actionRemove_Tool = QtWidgets.QAction(MainWindow)
        self.actionRemove_Tool.setObjectName("actionRemove_Tool")
        self.actionRefresh_Tools = QtWidgets.QAction(MainWindow)
        self.actionRefresh_Tools.setObjectName("actionRefresh_Tools")
        self.actionExecuteSelected = QtWidgets.QAction(MainWindow)
        self.actionExecuteSelected.setObjectName("actionExecuteSelected")
        self.actionExecuteProject = QtWidgets.QAction(MainWindow)
        self.actionExecuteProject.setObjectName("actionExecuteProject")
        self.actionStop_Execution = QtWidgets.QAction(MainWindow)
        self.actionStop_Execution.setObjectName("actionStop_Execution")
        self.actionExplore = QtWidgets.QAction(MainWindow)
        self.actionExplore.setObjectName("actionExplore")
        self.actionShow_ToolBar = QtWidgets.QAction(MainWindow)
        self.actionShow_ToolBar.setObjectName("actionShow_ToolBar")
        self.actionShowResizeViewsToolbar = QtWidgets.QAction(MainWindow)
        self.actionShowResizeViewsToolbar.setCheckable(True)
        self.actionShowResizeViewsToolbar.setChecked(True)
        self.actionShowResizeViewsToolbar.setAutoRepeat(False)
        self.actionShowResizeViewsToolbar.setObjectName("actionShowResizeViewsToolbar")
        self.actionResults = QtWidgets.QAction(MainWindow)
        self.actionResults.setObjectName("actionResults")
        self.actionShowToolToolbar = QtWidgets.QAction(MainWindow)
        self.actionShowToolToolbar.setCheckable(True)
        self.actionShowToolToolbar.setChecked(True)
        self.actionShowToolToolbar.setAutoRepeat(False)
        self.actionShowToolToolbar.setObjectName("actionShowToolToolbar")
        self.actionShowExecuteToolbar = QtWidgets.QAction(MainWindow)
        self.actionShowExecuteToolbar.setCheckable(True)
        self.actionShowExecuteToolbar.setChecked(True)
        self.actionShowExecuteToolbar.setAutoRepeat(False)
        self.actionShowExecuteToolbar.setObjectName("actionShowExecuteToolbar")
        self.actionShowDeleteToolbar = QtWidgets.QAction(MainWindow)
        self.actionShowDeleteToolbar.setCheckable(True)
        self.actionShowDeleteToolbar.setChecked(True)
        self.actionShowDeleteToolbar.setAutoRepeat(False)
        self.actionShowDeleteToolbar.setObjectName("actionShowDeleteToolbar")
        self.actionShowClearToolbar = QtWidgets.QAction(MainWindow)
        self.actionShowClearToolbar.setCheckable(True)
        self.actionShowClearToolbar.setChecked(True)
        self.actionShowClearToolbar.setAutoRepeat(False)
        self.actionShowClearToolbar.setObjectName("actionShowClearToolbar")
        self.actionShowDataToolbar = QtWidgets.QAction(MainWindow)
        self.actionShowDataToolbar.setCheckable(True)
        self.actionShowDataToolbar.setChecked(True)
        self.actionShowDataToolbar.setAutoRepeat(False)
        self.actionShowDataToolbar.setObjectName("actionShowDataToolbar")
        self.menuFile.addAction(self.actionNew)
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionSave_As)
        self.menuFile.addAction(self.actionLoad)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSettings)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionQuit)
        self.menuHelp.addAction(self.actionHelp)
        self.menuHelp.addAction(self.actionAbout)
        self.menuData.addAction(self.actionImportData)
        self.menuData.addAction(self.actionVerifyData)
        self.menuData.addAction(self.actionExplore)
        self.menuData.addAction(self.actionResults)
        self.menuTools.addAction(self.actionAdd_Tool)
        self.menuTools.addAction(self.actionRefresh_Tools)
        self.menuTools.addAction(self.actionRemove_Tool)
        self.menuExecute.addAction(self.actionExecuteSelected)
        self.menuExecute.addAction(self.actionExecuteProject)
        self.menuExecute.addAction(self.actionStop_Execution)
        self.menuToolbars.addAction(self.actionShowResizeViewsToolbar)
        self.menuToolbars.addAction(self.actionShowExecuteToolbar)
        self.menuToolbars.addAction(self.actionShowToolToolbar)
        self.menuToolbars.addAction(self.actionShowDeleteToolbar)
        self.menuToolbars.addAction(self.actionShowClearToolbar)
        self.menuToolbars.addAction(self.actionShowDataToolbar)
        self.menuView.addAction(self.menuToolbars.menuAction())
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuData.menuAction())
        self.menubar.addAction(self.menuExecute.menuAction())
        self.menubar.addAction(self.menuTools.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        self.tabWidget_setups.setCurrentIndex(0)
        self.tabWidget.setCurrentIndex(0)
        self.tabWidget_cmd_output.setCurrentIndex(0)
        self.tabWidget_tools.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Sceleton Titan"))
        self.tabWidget_setups.setTabText(self.tabWidget_setups.indexOf(self.tab_setups), _translate("MainWindow", "Setups"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_tools), _translate("MainWindow", "Tools"))
        self.textBrowser_main.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.tabWidget_cmd_output.setTabText(self.tabWidget_cmd_output.indexOf(self.tab_cmd), _translate("MainWindow", "Command Output"))
        self.tabWidget_tools.setTabText(self.tabWidget_tools.indexOf(self.tab_tool_output), _translate("MainWindow", "Tool Output"))
        self.tabWidget_tools.setTabText(self.tabWidget_tools.indexOf(self.tab_tool_definitions), _translate("MainWindow", "Tool Definitions"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.menuData.setTitle(_translate("MainWindow", "Data"))
        self.menuTools.setTitle(_translate("MainWindow", "Tools"))
        self.menuExecute.setTitle(_translate("MainWindow", "Execute"))
        self.menuView.setTitle(_translate("MainWindow", "View"))
        self.menuToolbars.setTitle(_translate("MainWindow", "Toolbars"))
        self.actionQuit.setText(_translate("MainWindow", "Exit"))
        self.actionQuit.setToolTip(_translate("MainWindow", "Quit Sceleton"))
        self.actionQuit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionAbout.setShortcut(_translate("MainWindow", "F12"))
        self.actionNew.setText(_translate("MainWindow", "New Project..."))
        self.actionNew.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.actionLoad.setText(_translate("MainWindow", "Load Project..."))
        self.actionLoad.setShortcut(_translate("MainWindow", "Ctrl+L"))
        self.actionHelp.setText(_translate("MainWindow", "Help"))
        self.actionHelp.setToolTip(_translate("MainWindow", "Sceleton documentation"))
        self.actionHelp.setShortcut(_translate("MainWindow", "F11"))
        self.actionSave.setText(_translate("MainWindow", "Save Project"))
        self.actionSave.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionSave_As.setText(_translate("MainWindow", "Save Project As..."))
        self.actionSave_As.setShortcut(_translate("MainWindow", "Ctrl+A"))
        self.actionUnpack.setText(_translate("MainWindow", "Unpack Project..."))
        self.actionUnpack.setToolTip(_translate("MainWindow", "<html><head/><body><p>Import project from a zip file</p></body></html>"))
        self.actionUnpack.setShortcut(_translate("MainWindow", "Ctrl+U"))
        self.actionPack.setText(_translate("MainWindow", "Pack Project..."))
        self.actionPack.setToolTip(_translate("MainWindow", "<html><head/><body><p>Export project to a zip file</p></body></html>"))
        self.actionPack.setShortcut(_translate("MainWindow", "Ctrl+P"))
        self.actionSettings.setText(_translate("MainWindow", "Settings..."))
        self.actionSettings.setToolTip(_translate("MainWindow", "<html><head/><body><p>Manage Sceleton Settings</p></body></html>"))
        self.actionSettings.setShortcut(_translate("MainWindow", "F1"))
        self.actionImportData.setText(_translate("MainWindow", "Import..."))
        self.actionImportData.setToolTip(_translate("MainWindow", "<html><head/><body><p>Import GAMS input data for Setups from MS Excel files</p></body></html>"))
        self.actionImportData.setShortcut(_translate("MainWindow", "F2"))
        self.actionVerifyData.setText(_translate("MainWindow", "Verify"))
        self.actionVerifyData.setToolTip(_translate("MainWindow", "<html><head/><body><p>Show Setup Input/Output Data</p></body></html>"))
        self.actionVerifyData.setShortcut(_translate("MainWindow", "F3"))
        self.actionAdd_Tool.setText(_translate("MainWindow", "Add Tool..."))
        self.actionAdd_Tool.setShortcut(_translate("MainWindow", "F8"))
        self.actionRemove_Tool.setText(_translate("MainWindow", "Remove Tool"))
        self.actionRemove_Tool.setShortcut(_translate("MainWindow", "F10"))
        self.actionRefresh_Tools.setText(_translate("MainWindow", "Refresh Tools"))
        self.actionRefresh_Tools.setShortcut(_translate("MainWindow", "F9"))
        self.actionExecuteSelected.setText(_translate("MainWindow", "Execute"))
        self.actionExecuteSelected.setShortcut(_translate("MainWindow", "F6"))
        self.actionExecuteProject.setText(_translate("MainWindow", "Execute Project"))
        self.actionExecuteProject.setShortcut(_translate("MainWindow", "F7"))
        self.actionStop_Execution.setText(_translate("MainWindow", "Cancel Execution"))
        self.actionStop_Execution.setShortcut(_translate("MainWindow", "Ctrl+C"))
        self.actionExplore.setText(_translate("MainWindow", "Explore"))
        self.actionExplore.setShortcut(_translate("MainWindow", "F4"))
        self.actionShow_ToolBar.setText(_translate("MainWindow", "Show ToolBar"))
        self.actionShowResizeViewsToolbar.setText(_translate("MainWindow", "Resize Views"))
        self.actionResults.setText(_translate("MainWindow", "Results"))
        self.actionResults.setShortcut(_translate("MainWindow", "F5"))
        self.actionShowToolToolbar.setText(_translate("MainWindow", "Tool"))
        self.actionShowExecuteToolbar.setText(_translate("MainWindow", "Execute"))
        self.actionShowDeleteToolbar.setText(_translate("MainWindow", "Delete"))
        self.actionShowClearToolbar.setText(_translate("MainWindow", "Clear Flags"))
        self.actionShowDataToolbar.setText(_translate("MainWindow", "Data"))

from widgets.custom_qtextbrowser import CustomQTextBrowser
import resources_rc
